# Default config for Wayfire
#
# Copy this to ~/.config/wayfire.ini and edit it to your liking.
#
# Take the tutorial to get started.
# https://github.com/WayfireWM/wayfire/wiki/Tutorial
#
# Read the Configuration document for a complete reference.
# https://github.com/WayfireWM/wayfire/wiki/Configuration

# Input configuration ──────────────────────────────────────────────────────────

# Example configuration:
#
# [input]
# xkb_layout = us,fr
# xkb_variant = dvorak,bepo
#
# See Input options for a complete reference.
# https://github.com/WayfireWM/wayfire/wiki/Configuration#input

[input]
xkb_layout = us                   # 键盘格式
# xkb_variant = dvorak,bepo       # 键盘变体，除了默认的qwer式的布局之外的其他，一般不需要配置
#kb_numlock_default_state = true   # 键盘数字锁默认是否开启
#mouse_accel_profile = adaptive    # 关于鼠标速度的配置方案，adaptive意为“适应”
cursor_theme = Adwaita            # 鼠标指针样式
cursor_size = 24                  # 鼠标指针大小，默认为24

# Output configuration ─────────────────────────────────────────────────────────

# Example configuration:
#
# [output:eDP-1]
# mode = 1920x1080@60000
# position = 0,0
# transform = normal
# scale = 1.000000
#
# You can get the names of your outputs with wlr-randr.
# https://github.com/emersion/wlr-randr
#
# See also kanshi for configuring your outputs automatically.
# https://wayland.emersion.fr/kanshi/
#
# See Output options for a complete reference.
# https://github.com/WayfireWM/wayfire/wiki/Configuration#output

# Core options ─────────────────────────────────────────────────────────────────

[core]

# List of plugins to be enabled.
# See the Configuration document for a complete list.
plugins = \
  alpha \
  animate \
  autostart \
  command \
  cube \
  decoration \
  expo \
  fast-switcher \
  fisheye \
  grid \
  idle \
  invert \
  move \
  oswitch \
  place \
  resize \
  switcher \
  vswitch \
  window-rules \
  wm-actions \
  wobbly \
  wrot \
  blur \
  zoom \
  simple-tile  # 窗口平铺

# Note: [blur] is not enabled by default, because it can be resource-intensive.
# Feel free to add it to the list if you want it.
# You can find its documentation here:
# https://github.com/WayfireWM/wayfire/wiki/Configuration#blur

# Close focused window. 关闭窗口
close_top_view = <super>  <shift> KEY_Q | <alt> KEY_F4

# ai说可以解决alt tab 只显示当前工作区的问题 false 实际测试没啥卵用
# focus_on_window_activation = false

# Workspaces arranged into a grid: 3 × 3.
vwidth = 3
vheight = 3

# Prefer client-side decoration or server-side decoration
preferred_decoration_mode = client

# Mouse bindings ───────────────────────────────────────────────────────────────
# 平铺窗口的配置
[simple-tile]
# 移动窗口
button_move=<super>
# 平铺窗口大小
button_resize=<super>
# 指定更改焦点时是否保持全屏状态。如果为true，则下一个聚焦窗口也将变为全屏。如果为false，则退出全屏。默认值为true。
keep_fullscreen_on_adjacent=true
# 切换焦点
key_focus_above =<super> KEY_UP
key_focus_below =<super> KEY_DOWN
key_focus_left =<super> KEY_LEFT
key_focus_right =<super> KEY_RIGHT
# 切换平铺 
key_toggle = <super>  <shift> KEY_C
# 为符合指定条件的窗口启用平铺。默认值为all。
#tile_by_default = all
tile_by_default = (floating is false) 
# 设置平铺窗口间隔
inner_gap_size = 0 # 窗口之间间距
outer_vert_gap_size = 0 #屏幕上下间距
outer_horiz_gap_size= 0 #屏幕左右间距

# 移动窗口
[move]
activate = <super> BTN_LEFT

# 修改窗口大小
[resize]
activate = <super> BTN_RIGHT


[zoom]
modifier = <super>              # 缩放(放大镜) super+滚轮
speed = 0.010000
smoothing_duration = 300


# Change opacity by scrolling with Super + Alt.
[alpha]
modifier = <super> <alt>        # 窗口透明度 super+alt+滚轮

# Rotate windows with the mouse. 旋转转动窗口 这个是水平转
[wrot]
activate = <super> <ctrl> BTN_RIGHT

# Fisheye effect. 鱼眼放大镜
[fisheye]
toggle = <super> <ctrl> KEY_F

[animate]
open_animation = fade     # 窗口打开特效,可选的还有 fade zoom fire none
close_animation = zoom    # 窗口关闭特效
duration = 100            # 持续时间

[decoration]
title_height =  0                                 # 标题栏高度
active_color = 0.36862745 0.505882 0.67450 1      # 焦点窗口
inactive_color = 0.298039215 0.33725490196078434 0.41568627450980394 1

# Startup commands ─────────────────────────────────────────────────────────────

[autostart]
# 环境变量，不然部分软件启动很慢
environment = dbus-update-activation-environment --systemd WAYLAND_DISPLAY DISPLAY XAUTHORITY


# Automatically start background and panel. 自动启动
# Set to false if you want to override the default clients.
autostart_wf_shell = true

# Set the wallpaper, start a panel and dock if you want one.
# https://github.com/WayfireWM/wf-shell
#
# These are started by the autostart_wf_shell option above.
#
# background = wf-background
background = swaybg -i $(find /home/yanhui/bg/ -type f | shuf -n1) -m fill
# panel = wf-panel
# dock = wf-dock
bar = waybar
# 输入法
inputmethod = fcitx5

# Output configuration 自适应屏幕输出
# https://wayland.emersion.fr/kanshi/
outputs = kanshi

# Notifications 通知
# https://wayland.emersion.fr/mako/
notifications = mako

# Screen color temperature 屏幕色温
# https://sr.ht/~kennylevinsen/wlsunset/
gamma = wlsunset

# Idle configuration 空闲设置
# https://github.com/swaywm/swayidle
# https://github.com/swaywm/swaylock
idle = swayidle before-sleep swaylock --image ./bg/zifa.jpg  --color 015000    --show-keyboard-layout 

# XDG desktop portal
# Needed by some GTK applications
portal = /usr/libexec/xdg-desktop-portal

# Example configuration:
#
[idle]
toggle = <super> KEY_Z
screensaver_timeout = 300       # 无活动300秒锁屏
dpms_timeout = 600              # 无活动600秒静如节能模式
#
# Disables the compositor going idle with Super + z.
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds.

# Applications ─────────────────────────────────────────────────────────────────

[command]

# Start a terminal 终端
# https://github.com/alacritty/alacritty
binding_terminal = <super> KEY_ENTER
command_terminal = alacritty

# Start your launcher
# https://hg.sr.ht/~scoopta/wofi
# Note: Add mode=run or mode=drun to ~/.config/wofi/config.
# You can also specify the mode with --show option.
binding_launcher = <super> <shift> KEY_ENTER
#command_launcher = wofi --show run 
command_launcher = rofi -show drun

# Screen locker 
# https://github.com/swaywm/swaylock
#binding_lock = <super> <shift> KEY_ESC
#command_lock = swaylock
# 锁屏
binding_Lock =<super> KEY_L
command_Lock= swaylock --image ./bg/zifa.jpg  --color 015000    --show-keyboard-layout 

# Logout 推出登陆
# https://github.com/ArtsyMacaw/wlogout
binding_logout = <super> KEY_ESC
command_logout = wlogout

# Screenshots 截图
# https://wayland.emersion.fr/grim/
# https://wayland.emersion.fr/slurp/
#binding_screenshot = KEY_PRINT
#command_screenshot = grim $(date '+%F_%T').webp
#binding_screenshot_interactive = <shift> KEY_PRINT
#command_screenshot_interactive = slurp | grim -g - $(date '+%F_%T').webp

# Screenshots 截图 ：= 选区 保存 打开编辑 保存 复制到剪切板  
# 所需要包： grim slurp ksnip wl-clipboard
# ksnip 需要配置一下 关闭单实例 关闭 最小化和关闭到托盘
binding_screenshot = <super>  KEY_P
command_screenshot = SAVEPATH=$HOME/Pictures/screenshot && mkdir -p $SAVEPATH && NOW=$(date +"%Y-%m-%d-%H%M%S") && grim -g "$(slurp )" -t png $SAVEPATH/grim-$NOW.png && ksnip $SAVEPATH/grim-$NOW.png && wl-copy < $SAVEPATH/grim-$NOW.png && find "$SAVEPATH" -type f -mtime +3 -exec rm {} +

# 文件管理器
binding_file_manager = <super> KEY_E
command_file_manager = thunar


# 恢复所有旋转的窗口
binding_recoverWrot =  <super> <ctrl> KEY_R
#command_recoverWrot = sed -i 's/wrot \\/#wrot \\/g'  $HOME/.config/wayfire.ini && sed -i 's/#wrot \\/wrot \\/g'  $HOME/.config/wayfire.ini && zenity --info --text="Hello, World"
# Volume controls 音量
# https://alsa-project.org
repeatable_binding_volume_up = KEY_VOLUMEUP
command_volume_up = amixer set Master 5%+
repeatable_binding_volume_down = KEY_VOLUMEDOWN
command_volume_down = amixer set Master 5%-
binding_mute = KEY_MUTE
command_mute = amixer set Master toggle

# brightnessctl 屏幕亮度 先装brightnessctl这个包
# https://haikarainen.github.io/light/
binding_brightness_down = KEY_BRIGHTNESSDOWN
command_brightness_down = brightnessctl set 5%-
binding_brightness_up = KEY_BRIGHTNESSUP
command_brightness_up = brightnessctl set +5%
#command_light_up = light -A 5
#command_light_down = light -U 5

# Windows ──────────────────────────────────────────────────────────────────────

# Actions related to window management functionalities.
#
# Example configuration:
#
# [wm-actions]
# toggle_fullscreen = <super> KEY_F
# toggle_always_on_top = <super> KEY_X
# toggle_sticky = <super> <shift> KEY_X

# Position the windows in certain regions of the output.
[grid]
#
# ⇱ ↑ ⇲   │ 7 8 9
# ← f →   │ 4 5 6
# ⇱ ↓ ⇲ d │ 1 2 3 0
# ‾   ‾
#86键盘-窗口-浮动窗口下有效
slot_bl = <super> KEY_KP1 | <super> <ctrl> KEY_UP #左下角
#slot_b = <super> KEY_PRINT
slot_b = <super> KEY_KP2  | <super> <alt> KEY_PRIN  #下半
#slot_br = <super> KEY_KP3 
slot_br = <super> KEY_KP3|  <super> <alt> KEY_UP #右下角

slot_l = <super> KEY_LEFT | <super> KEY_KP4 #左半
#slot_c = <super> KEY_UP   | <super> KEY_KP5
slot_c= <super> <shift> KEY_UP   #最大化
#restore = <super> KEY_DOWN | <super> KEY_KP0 
restore=<super> <shift> KEY_DOWN | <super> KEY_KP0 #恢复默认大小
slot_r = <super> KEY_RIGHT | <super> KEY_KP6 #右半
slot_tl = <super> KEY_KP7
#slot_t = <super> KEY_KP8 
slot_t = <super> KEY_UP | <super> KEY_KP8 #上半
slot_tr = <super> KEY_KP9

# 切换窗口
[switcher]
next_view = <alt> KEY_TAB
prev_view = <alt> <shift> KEY_TAB

# Simple active window switcher. 简单快速切换
[fast-switcher]
activate = <alt> KEY_ESC

# Workspaces ───────────────────────────────────────────────────────────────────

# Switch to workspace. 切换工作区/桌面
[vswitch]
binding_left = <ctrl> <super> KEY_LEFT
binding_down = <ctrl> <super> KEY_DOWN
binding_up = <ctrl> <super> KEY_UP
binding_right = <ctrl> <super> KEY_RIGHT
# Move the focused window with the same key-bindings, but add Shift.
binding_win_left = <ctrl> <super> <shift> KEY_LEFT
binding_win_down = <ctrl> <super> <shift> KEY_DOWN
binding_win_up = <ctrl> <super> <shift> KEY_UP
binding_win_right = <ctrl> <super> <shift> KEY_RIGHT

# Show the current workspace row as a cube.
# 以立方体显示所有工作区间
[cube]
activate = <ctrl> <alt> BTN_LEFT
# Switch to the next or previous workspace.
# 快速切换到下一个工作区间
#rotate_left = <super> <ctrl> KEY_H
#rotate_right = <super> <ctrl> KEY_L

# Show an overview of all workspaces.
# 显示所有工作区间 并从里面选择
[expo]
toggle = <super>
# Select a workspace.
# Workspaces are arranged into a grid of 3 × 3.
# The numbering is left to right, line by line.
#
# ⇱ k ⇲
# h ⏎ l
# ⇱ j ⇲
# ‾   ‾
# See core.vwidth and core.vheight for configuring the grid.
select_workspace_1 = KEY_1
select_workspace_2 = KEY_2
select_workspace_3 = KEY_3
select_workspace_4 = KEY_4
select_workspace_5 = KEY_5
select_workspace_6 = KEY_6
select_workspace_7 = KEY_7
select_workspace_8 = KEY_8
select_workspace_9 = KEY_9

# Outputs ──────────────────────────────────────────────────────────────────────
# 输出(屏幕)
# Change focused output.
# 屏幕切换，如果你接双屏的话
[oswitch]
# Switch to the next output.
next_output = <super> KEY_O
# Same with the window.
next_output_with_win = <super> <shift> KEY_O

# Invert the colors of the whole output.
# 反色
[invert]
toggle = <super> KEY_I

# Rules ────────────────────────────────────────────────────────────────────────

# Example configuration:
#
# [window-rules]
# maximize_alacritty = on created if app_id is "Alacritty" then maximize
#
# You can get the properties of your applications with the following command:
# $ WAYLAND_DEBUG=1 alacritty 2>&1 | kak
#
# See Window rules for a complete reference.
# https://github.com/WayfireWM/wayfire/wiki/Configuration#window-rules
